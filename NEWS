
toaster 0.2.x
----------------------------------------------------------------

* New text mining functions `computeTf` and `computeTfIdf` 
  process corpora in Aster and produce results compatible with package tm.

* Text parsers `nGram` and `token` are pluggable into text mining functions
  above.

* Linear regression now is compatible with R standard lm functions returning
  object of class c('toalm', 'lm'). This means methods `summary`, 
  `coefficients`, etc. work with the object returned by `computeLm`.
  This change is not backward compatible: to obtain result returned in 0.2.5 
  list contains element `old.result`.

* To compute results similar to `lm` `computeLm` uses sample (default 1000 
  rows) to calculate stats like residuals, R-square, etc. in Aster. As before, 
  linear regression coefficients are calculated on full data set with
  SQL/MR linreg function.

MINOR FEATURES

* Parameter `formula` replaced defunct `expr` in the function `computeLm` 
  for consistency with other model-fitting functions.

* `computePercentiles` now computes on multiple columns.

* Added deprecated warning facility `toa_dep` similar to ggplot2 gg_dep 
  function.

toaster 0.2.5
----------------------------------------------------------------

MINOR FEATURES

* `computePercentiles` now computes on multiple columns.

* Added deprecated warning facility `toa_dep` similar to ggplot2 gg_dep 
  function.

toaster 0.2.5
----------------------------------------------------------------

NEW FEATURES

* `computeSample`: randomly sample data from the table specifying
  fraction or size of desired data set.

* `createMap`: new visualization function for combining maps with data 
  artifacts from Aster database. Can be used to produce maps of 
  arbitrary scale (with exception of whole world) and type with shapes
  of size and labels corresponding to data computed in Aster. It uses 
  ggmap and ggplot2 packages and Google API for geocoding data as 
  necessary. It implements smart logic to choose map tiles to place
  geocoded data appropriately, and it also automatically geocodes 
  data if necessary (Google API restrictions apply).

* Due to geocoding and map API restrictions `createMap` supports 
  function caching suggesting function `memoise` of memoise package. 
  (other functions are fine too). Properly following suggested practices 
  should significantly optimize both peformance and API usage when geocoding
  or retrieving maps.

* `compute`: for executing arbitrary aggregations on Aster tables.

* `computeBarchart`: for computing data for barchart visualizations. This
  is different from `computeHistogram` as barchart is defined on factors
  (categorical data) witch doesn't support defining bins like in histograms.

* `computePercentiles`: for computing multiple percentiles across one or 
  many subsets of a table in one go. Results are suitable for function
  `createBoxplot` (see next).

* `createBoxplot`: visualizes boxplots for single column across one or
  multiple subsets.

* `computeLm`: compute linear model coefficients similar to lm function but
  all performed inside Aster.

ENHANCEMENTS

* added parameter `test` to compute- functions (functions that access and 
  manipulate data in Aster) to produce SQL without executing it. Thus, when 
  `test=TRUE` function returns string containing SQL that would have run
  in Aster.

* package depedencies moved from Depends to Imports section of DESCRIPTION file 
  except for RODBC package. Keeping RODBC in Depends because toaster requires 
  access to RODBC connection object and to its function `odbcConnect`. Other 
  packages are not exposed by toaster functions so accessing them would have 
  been needed only for advanced usage (if any).
  if you use any function from the packages other than RODBC then those packages 
  should be loaded with `library` or `require` or use their namespace. 

* facet parameter now supports both one-value and 2-value vector (if parameter 
  is longer than the rest of values are ignored). Single value defines column
  name for wrapping facets in 1 or more column lattice. Two values define pair
  of columns to place facets in 2-dimensional grid for each combination of 
  values found.

* `createHistogram` supports trend lines with parameter trendLine=TRUE.

* `computeHeatmap` converts dimension and facet columns to factors by default.
  If undesired set parameter dimAsFactor = FALSE to disable (not recommended
  with heat maps). 

* `computeHeatmap` now supports withMelt to melt result using function melt
  from package reshape2. This option simplifies visualizating with facets.

* `createBubblechart` now supports scaling shapes by size (default) or by area.
  Correspondingly, use shapeSizeRange when scaling by size; and shapeMaxSize
  when scaling by area.

* `createBubblechart` added parameters to control label positioning and 
  formatting. All parameters that position and format label text start
  with prefix "label" now. Old parameters textSize, textColour, and 
  textVJust renamed to labelSize, labelColour, labelVJust. 

* `createPopPyramid` support for facets.

* added utility method to list Aster data types: `getNumericTypes`, 
  `getCharacterTypes`, `getTemporalTypes`.

* `computeAggregates` is not an alias anymore and it replaced function
  `compute` which is no more.

BUG FIXES



DOCUMENTAION

* added more examples